"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var Direction;
(function (Direction) {
    Direction["Asc"] = "ASC";
    Direction["Desc"] = "DESC";
})(Direction = exports.Direction || (exports.Direction = {}));
var GitProvider;
(function (GitProvider) {
    GitProvider["Github"] = "GITHUB";
})(GitProvider = exports.GitProvider || (exports.GitProvider = {}));
var Region;
(function (Region) {
    Region["AsiaEast1"] = "asia_east1";
    Region["AsiaNortheast1"] = "asia_northeast1";
    Region["EuropeNorth1"] = "europe_north1";
    Region["EuropeWest1"] = "europe_west1";
    Region["EuropeWest4"] = "europe_west4";
    Region["UsCentral1"] = "us_central1";
    Region["UsEast1"] = "us_east1";
    Region["UsEast4"] = "us_east4";
    Region["UsWest1"] = "us_west1";
})(Region = exports.Region || (exports.Region = {}));
var StackFields;
(function (StackFields) {
    StackFields["Name"] = "name";
    StackFields["Status"] = "status";
    StackFields["Region"] = "region";
    StackFields["PulumiStateUrl"] = "pulumiStateUrl";
    StackFields["Id"] = "_id";
    StackFields["CreatedAtUnix"] = "createdAtUnix";
    StackFields["DeployedByUserUid"] = "deployedByUserUid";
    StackFields["DockerComposeJson"] = "dockerComposeJson";
    StackFields["DockerComposeYaml"] = "dockerComposeYaml";
    StackFields["DeploymentsCount"] = "deploymentsCount";
})(StackFields = exports.StackFields || (exports.StackFields = {}));
var StackStatus;
(function (StackStatus) {
    StackStatus["Creating"] = "CREATING";
    StackStatus["Active"] = "ACTIVE";
    StackStatus["Error"] = "ERROR";
})(StackStatus = exports.StackStatus || (exports.StackStatus = {}));
var TemplateFields;
(function (TemplateFields) {
    TemplateFields["Id"] = "_id";
    TemplateFields["Name"] = "name";
    TemplateFields["Description"] = "description";
    TemplateFields["IconSrc"] = "iconSrc";
    TemplateFields["EnvVarsSchemaJson"] = "envVarsSchemaJson";
    TemplateFields["DockerComposeYaml"] = "dockerComposeYaml";
})(TemplateFields = exports.TemplateFields || (exports.TemplateFields = {}));
var UserFields;
(function (UserFields) {
    UserFields["Uid"] = "uid";
    UserFields["PhotoUrl"] = "photoUrl";
    UserFields["DisplayName"] = "displayName";
    UserFields["Email"] = "email";
})(UserFields = exports.UserFields || (exports.UserFields = {}));
exports.DeployStackDocument = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    mutation DeployStack($input: DeployStackInput) {\n  deployStack(input: $input) {\n    _id\n    firstTimeDeployment\n  }\n}\n    "], ["\n    mutation DeployStack($input: DeployStackInput) {\n  deployStack(input: $input) {\n    _id\n    firstTimeDeployment\n  }\n}\n    "])));
exports.IsServiceDeployedDocument = graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    query IsServiceDeployed($id: ObjectId) {\n  Stack(where: {_id: {eq: $id}}) {\n    status\n    name\n    _id\n    region\n    services {\n      name\n      url\n    }\n    lastDeploymentError {\n      name\n      message\n    }\n  }\n}\n    "], ["\n    query IsServiceDeployed($id: ObjectId) {\n  Stack(where: {_id: {eq: $id}}) {\n    status\n    name\n    _id\n    region\n    services {\n      name\n      url\n    }\n    lastDeploymentError {\n      name\n      message\n    }\n  }\n}\n    "])));
exports.LoginDocument = graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    mutation Login($input: LoginInput) {\n  login(input: $input) {\n    isSignup\n    token\n    expiresIn\n  }\n}\n    "], ["\n    mutation Login($input: LoginInput) {\n  login(input: $input) {\n    isSignup\n    token\n    expiresIn\n  }\n}\n    "])));
exports.LoginWithGithubDocument = graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    mutation LoginWithGithub($input: LoginWithGithubInput) {\n  loginWithGithub(input: $input) {\n    isSignup\n    token\n    expiresIn\n  }\n}\n    "], ["\n    mutation LoginWithGithub($input: LoginWithGithubInput) {\n  loginWithGithub(input: $input) {\n    isSignup\n    token\n    expiresIn\n  }\n}\n    "])));
exports.UploadEnvFilesDocument = graphql_tag_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    mutation UploadEnvFiles($input: UploadEnvFilesInput) {\n  uploadEnvFiles(input: $input)\n}\n    "], ["\n    mutation UploadEnvFiles($input: UploadEnvFilesInput) {\n  uploadEnvFiles(input: $input)\n}\n    "])));
exports.DownloadEnvFilesDocument = graphql_tag_1.default(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n    query DownloadEnvFiles($id: ObjectId) {\n  Stack(where: {_id: {eq: $id}}) {\n    envFiles {\n      path\n      content\n    }\n  }\n}\n    "], ["\n    query DownloadEnvFiles($id: ObjectId) {\n  Stack(where: {_id: {eq: $id}}) {\n    envFiles {\n      path\n      content\n    }\n  }\n}\n    "])));
exports.GetLogsDocument = graphql_tag_1.default(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n    query GetLogs($input: GetLogsInput) {\n  getLogs(input: $input) {\n    nodes {\n      datetime\n      line\n      service\n    }\n  }\n}\n    "], ["\n    query GetLogs($input: GetLogsInput) {\n  getLogs(input: $input) {\n    nodes {\n      datetime\n      line\n      service\n    }\n  }\n}\n    "])));
exports.GetMetricsDocument = graphql_tag_1.default(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n    query GetMetrics($input: MetricsInput) {\n  reqCounts: getRequestsCountMetrics(input: $input) {\n    x\n    y\n    serviceName\n  }\n  reqLatencies: getRequestsLatencyMetrics(input: $input) {\n    x\n    y\n    serviceName\n  }\n}\n    "], ["\n    query GetMetrics($input: MetricsInput) {\n  reqCounts: getRequestsCountMetrics(input: $input) {\n    x\n    y\n    serviceName\n  }\n  reqLatencies: getRequestsLatencyMetrics(input: $input) {\n    x\n    y\n    serviceName\n  }\n}\n    "])));
exports.GetStackDataDocument = graphql_tag_1.default(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n    query GetStackData {\n  Stack {\n    name\n    dockerComposeYaml\n    services {\n      name\n      cloudConsoleName\n      url\n      isActive\n      image\n      isActive\n      vcpusCount\n      ramMbSize\n    }\n    assoicatedGitRepo {\n      url\n      prettyName\n      type\n    }\n    status\n    region\n    createdAtUnix\n    deployedByUserUid\n  }\n}\n    "], ["\n    query GetStackData {\n  Stack {\n    name\n    dockerComposeYaml\n    services {\n      name\n      cloudConsoleName\n      url\n      isActive\n      image\n      isActive\n      vcpusCount\n      ramMbSize\n    }\n    assoicatedGitRepo {\n      url\n      prettyName\n      type\n    }\n    status\n    region\n    createdAtUnix\n    deployedByUserUid\n  }\n}\n    "])));
exports.GetUserDataDocument = graphql_tag_1.default(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n    query GetUserData($uid: String) {\n  User(where: {uid: {eq: $uid}}) {\n    uid\n    photoUrl\n    displayName\n    email\n    stacksReferences {\n      nodes {\n        name\n        _id\n        createdAtUnix\n        assoicatedGitRepo {\n          prettyName\n          url\n          type\n        }\n      }\n    }\n  }\n}\n    "], ["\n    query GetUserData($uid: String) {\n  User(where: {uid: {eq: $uid}}) {\n    uid\n    photoUrl\n    displayName\n    email\n    stacksReferences {\n      nodes {\n        name\n        _id\n        createdAtUnix\n        assoicatedGitRepo {\n          prettyName\n          url\n          type\n        }\n      }\n    }\n  }\n}\n    "])));
exports.GetTemplateDataDocument = graphql_tag_1.default(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n    query GetTemplateData($_id: ObjectId) {\n  Template(where: {_id: {eq: $_id}}) {\n    _id\n    gitRepo {\n      url\n      prettyName\n      type\n    }\n    name\n    description\n    iconSrc\n    envVarsSchemaJson\n    dockerComposeYaml\n  }\n}\n    "], ["\n    query GetTemplateData($_id: ObjectId) {\n  Template(where: {_id: {eq: $_id}}) {\n    _id\n    gitRepo {\n      url\n      prettyName\n      type\n    }\n    name\n    description\n    iconSrc\n    envVarsSchemaJson\n    dockerComposeYaml\n  }\n}\n    "])));
function getSdk(client) {
    return {
        DeployStack: function (variables) {
            return client.request(graphql_1.print(exports.DeployStackDocument), variables);
        },
        IsServiceDeployed: function (variables) {
            return client.request(graphql_1.print(exports.IsServiceDeployedDocument), variables);
        },
        Login: function (variables) {
            return client.request(graphql_1.print(exports.LoginDocument), variables);
        },
        LoginWithGithub: function (variables) {
            return client.request(graphql_1.print(exports.LoginWithGithubDocument), variables);
        },
        UploadEnvFiles: function (variables) {
            return client.request(graphql_1.print(exports.UploadEnvFilesDocument), variables);
        },
        DownloadEnvFiles: function (variables) {
            return client.request(graphql_1.print(exports.DownloadEnvFilesDocument), variables);
        },
        GetLogs: function (variables) {
            return client.request(graphql_1.print(exports.GetLogsDocument), variables);
        },
        GetMetrics: function (variables) {
            return client.request(graphql_1.print(exports.GetMetricsDocument), variables);
        },
        GetStackData: function (variables) {
            return client.request(graphql_1.print(exports.GetStackDataDocument), variables);
        },
        GetUserData: function (variables) {
            return client.request(graphql_1.print(exports.GetUserDataDocument), variables);
        },
        GetTemplateData: function (variables) {
            return client.request(graphql_1.print(exports.GetTemplateDataDocument), variables);
        }
    };
}
exports.getSdk = getSdk;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11;
