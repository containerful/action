"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var yargs_1 = __importDefault(require("yargs"));
var deploy_1 = __importDefault(require("./deploy"));
var login_1 = __importDefault(require("./login"));
var logout_1 = __importDefault(require("./logout"));
var envFiles_1 = __importDefault(require("./envFiles/"));
var support_1 = require("./support");
var winston_1 = __importDefault(require("winston"));
yargs_1.default
    .option('file', { type: 'string', default: 'docker-compose.yml' })
    .option('verbose', {
    alias: 'v',
    type: 'boolean',
    default: false,
})
    .option('env-file', {
    type: 'string',
    default: '.env',
})
    .middleware([
    function (argv) {
        if (argv.verbose) {
            winston_1.default.configure(__assign(__assign({}, support_1.winstonConf), { level: 'debug' }));
            return;
        }
        winston_1.default.configure(__assign(__assign({}, support_1.winstonConf), { silent: true, level: 'error' }));
    },
])
    .command(support_1.withErrorHandling(support_1.needsLogin(deploy_1.default)))
    .command(support_1.withErrorHandling(login_1.default))
    .command(support_1.withErrorHandling(logout_1.default))
    .command(support_1.withErrorHandling((envFiles_1.default)))
    // .demandCommand()
    .help('h').argv;
